using System;
using System.Reflection;
using UnityEngine;
using UnityEngine.SceneManagement;

namespace Miscellaneous
{
    // Small utility class that will automatically switch to the 0 scene if started in the wrong scene
    public class SceneWatcher : MonoBehaviour
    {
        private static bool isStarted;

        private void Awake()
        {
            if (!isStarted)
            {
                if (SceneManager.GetActiveScene().buildIndex > 0)
                {
                    SceneManager.LoadScene(0);
#if UNITY_EDITOR
                    // This clears all unity error logs generated by loading the wrong scene
                    ClearDeveloperConsole();
#endif
                }

                isStarted = true;
            }
        }

        // This method is a replacement for Debug.ClearDeveloperConsole(), which doesn't work
        public static void ClearDeveloperConsole()
        {
            // First we get the "LogEntries" type
            Type logEntries = Type.GetType("UnityEditorInternal.LogEntries, UnityEditor.dll");

            // Then we get the public static "Clear" method
            MethodInfo clearMethod = logEntries.GetMethod("Clear", BindingFlags.Public | BindingFlags.Static);

            // Through reflection we can now use the previously inaccessible method "LogEntries.Clear()"
            clearMethod.Invoke(null, null);

            Debug.Log("Reloaded the correct startup scene as the wrong one had been loaded! Errors may occur");
        }
    }
}